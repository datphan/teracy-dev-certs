---
- hosts: all
  become: true
  tasks:
    # TODO(hoatle): make sure this works cross different OSes
    - name: apt install python-openssl
      apt: 
        name: python-openssl
      when: ansible_os_family == "Debian"

    - name: Generate the CA private key
      openssl_privatekey:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-ca-key.pem"

    - stat: path={{ certs_path }}/{{ common_name | replace('.', '-') }}-ca.crt
      register: ca_crt_file

    - name: Generate a Self Signed CA certificate
      shell: openssl req -x509 -new -nodes -key {{ common_name | replace('.', '-') }}-ca-key.pem -days {{ ca_days }} -out {{ common_name | replace('.', '-') }}-ca.crt -subj "/CN={{ common_name | replace('.', '-') }}-ca"
      args:
        chdir: "{{ certs_path }}"
      when: ca_crt_file.stat.exists == False

    - name: Generate the {{ common_name }} private key
      openssl_privatekey:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-key.pem"


    - name: Generate the {{ common_name }} certificate signing request (CSR)
      openssl_csr:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}.csr"
        privatekey_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-key.pem"
        common_name: "{{ common_name }}"
        subject_alt_name: "{{ item.value | map('regex_replace', '^', 'DNS:') | list }}"
      with_dict:
        alt_names: "{{ alt_names }}"


    - name: Generate the {{ common_name }} certificate signed by the self-signed CA
      openssl_certificate:
        path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}.crt"
        csr_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}.csr"
        ownca_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-ca.crt"
        ownca_privatekey_path: "{{ certs_path }}/{{ common_name | replace('.', '-') }}-ca-key.pem"
        valid_in: "{{ cert_days*24*60*60 }}"  # seconds
        provider: ownca
